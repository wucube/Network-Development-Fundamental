syntax = "proto3";//决定了proto文档的版本号
//规则二：版本号

//规则一：注释方式
//注释方式一
/*注释方式二*/

//规则11：导入定义
import "test2.proto";

//规则三：命名空间
package GamePlayerTest;//这决定了命名空间


//规则四：消息类
message TestMsg{
	//规则五：成员类型 和 唯一编号

	//浮点数
	// = 1 不代表默认值 而是代表唯一编号 方便我们进行序列化和反序列化的处理
	//required 必须赋值的字段
	//required float testF = 1; //C# - float
	//optional 可以不赋值的字段
	optional double testD = 2; //C# - double

	//变长编码
	//所谓变长 就是会根据 数字的大小 来使用对应的字节数来存储  1 2 4 
	//Protobuf帮助我们优化的部分 可以尽量少的使用字节数 来存储内容
	int32 testInt32 = 3; //C# - int 它不太适用于来表示负数 请使用sint32
	//1 2 4 8
	int64 testInt64 = 4; //C# - long  它不太适用于来表示负数 请使用sint64

	//更实用与表示负数类型的整数
	sint32 testSInt32 = 5; //C# - int 适用于来表示负数的整数
	sint64 testSInt64 = 6; //C# - long 适用于来表示负数的整数

	//无符号 变长编码
	//1 2 4
	uint32 testUInt = 7; //C# - uint 变长的编码
	uint64 testULong = 8; //C# - ulong 变长的编码

	//固定字节数的类型
	fixed32 testFixed32 = 9; //C# -uint 它通常用来表示大于2的28次方的数 ，比uint32更有效 始终是4个字节
	fixed64 testFixed64 = 10; //C# -ulong 它通常用来表示大于2的56次方的数 ，比uint64更有效 始终是8个字节

	sfixed32 testSFixed32 = 11; //C# - int 始终4个字节
	sfixed64 testSFixed64 = 12; //C# - long 始终8个字节

	//其它类型
	bool testBool = 13; //C# - bool 
	string testStr = 14; //C# - string
	bytes testBytes = 15; //C# - BytesString 字节字符串

	//数组List
	repeated int32 listInt = 16; // C# - 类似List<int>的使用
	//字典Dictionary
	map<int32, string> testMap = 17; // C# - 类似Dictionary<int, string> 的使用

	//枚举成员变量的声明 需要唯一编码
	TestEnum testEnum = 18;

	//声明自定义类对象 需要唯一编码
	//默认值是null
	TestMsg2 testMsg2 = 19;

	//规则9：允许嵌套
	//嵌套一个类在另一个类当中 相当于是内部类
	message TestMsg3{
		int32 testInt32 = 1;
	}

	TestMsg3 testMsg3 = 20;

	//规则9：允许嵌套
	enum TestEnum2{
		NORMAL = 0; //第一个常量必须映射到0
		BOSS = 1;
	}

	TestEnum2 testEnum2 = 21;

	//int32 testInt3233333 = 22;

	bool testBool2123123 = 23;

	GameSystemTest.HeartMsg testHeart = 24;

	//告诉编译器 22 被占用 不准用户使用
	//之所以有这个功能 是为了在版本不匹配时 反序列化时 不会出现结构不统一
	//解析错误的问题
	reserved 22;
	reserved "testInt3233333";
}

//枚举的声明
enum TestEnum{
	NORMAL = 0; //第一个常量必须映射到0
	BOSS = 5;
}

message TestMsg2{
	int32 testInt32 = 1;
}